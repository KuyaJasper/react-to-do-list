{"version":3,"sources":["components/Form.js","components/ToDo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","event","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","ToDoList","filteredTodos","App","useState","status","setFitleredTodos","useEffect","getLocal","filterHandler","savetoLocal","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b00a651e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus}) => {\n  const inputTextHandler = (event) => {\n    setInputText(event.target.value);\n  };\n  const submitTodoHandler = (event) => {\n      event.preventDefault();\n      setTodos([\n          ...todos,{text: inputText, completed: false, id: Math.random() *1000}\n      ]);\n      setInputText('');\n  };\n  const statusHandler = (event) => {\n      setStatus(event.target.value)\n  };\n  return (\n    <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                };\n            }\n            return item;\n        })\n        );\n    };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\n\nimport Todo from \"./ToDo\";\n\nconst ToDoList = ({ todos, setTodos, filteredTodos }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            setTodos={setTodos}\n            todos={todos}\n            key={todo.id}\n            todo={todo}\n            text={todo.text}\n            />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n//Components\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFitleredTodos] = useState([]);\n\n  // Effects\n\n  useEffect( () => {\n    // this will only run once when the app loads for the first time\n    getLocal();\n  }, []\n  );\n\n  useEffect(() => {\n    filterHandler();\n    savetoLocal();\n  }, [todos, status]);\n\n  //Fuinctions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFitleredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFitleredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFitleredTodos(todos);\n        break;\n    }\n  };\n\n  // Save to Local Storage\n  const savetoLocal = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocal = () =>{\n    if(localStorage.getItem('todos') ===null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else{\n      let localTodos= JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodos);\n\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My To Do List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <ToDoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}